<html>
<head>
  <script src="https://cdn.anychart.com/releases/v8/js/anychart-base.min.js?hcode=c11e6e3cfefb406e8ce8d99fa8368d33"></script>
  <script src="https://cdn.anychart.com/releases/v8/js/anychart-ui.min.js?hcode=c11e6e3cfefb406e8ce8d99fa8368d33"></script>
  <script src="https://cdn.anychart.com/releases/v8/js/anychart-exports.min.js?hcode=c11e6e3cfefb406e8ce8d99fa8368d33"></script>
  <script src="https://cdn.anychart.com/releases/v8/js/anychart-map.min.js?hcode=c11e6e3cfefb406e8ce8d99fa8368d33"></script>
  <script src="https://cdn.anychart.com/releases/v8/js/anychart-data-adapter.min.js?hcode=c11e6e3cfefb406e8ce8d99fa8368d33"></script>
  <script src="https://cdn.anychart.com/geodata/2.0.0/custom/world/world.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.15/proj4.js"></script>
  <script src="https://cdn.anychart.com/themes/2.0.0/coffee.min.js"></script>
  <script src="https://cdn.anychart.com/releases/v8/themes/dark_blue.min.js"></script>
  <link href="https://cdn.anychart.com/releases/v8/css/anychart-ui.min.css?hcode=c11e6e3cfefb406e8ce8d99fa8368d33" type="text/css" rel="stylesheet">
  <link href="https://cdn.anychart.com/releases/v8/fonts/css/anychart-font.min.css?hcode=c11e6e3cfefb406e8ce8d99fa8368d33" type="text/css" rel="stylesheet">
  <style type="text/css">
html, body {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}
#container {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

#container2 {
    width: 100%;
    height: 20%;
    margin: 0;
    padding: 0;
}
</style>
</head>
<body>
  <div id="container"></div>
  <!-- <div id="container2"></div> -->
  <script>
// get data
var myDataCollected = <%- JSON.stringify(myData) %>;
var myHeaderCollected = <%- JSON.stringify(myHeader) %>;

var jsonData = JSON.parse(myDataCollected);
var covidStats = jsonData.countries_stat;
var dateTime = myHeaderCollected.date;


function kFormatter(numEntry) {
    var numEntryNew = numEntry.replace(/\s+/g, '');
    var num = parseInt(numEntryNew);
    if(Math.abs(num) > 999 && Math.abs(num) < 1000000){
        return Math.abs(num) > 999 ? Math.sign(num)*((Math.abs(num)/1000).toFixed(1)) + ' k' : Math.sign(num)*Math.abs(num)
    } else if(Math.abs(num) > 999999 && Math.abs(num) < 1000000000){
        return Math.abs(num) > 999999 ? Math.sign(num)*((Math.abs(num)/1000000).toFixed(1)) + ' M' : Math.sign(num)*Math.abs(num)
    } else if(Math.abs(num) > 999999999){
        return Math.abs(num) > 999999999 ? Math.sign(num)*((Math.abs(num)/1000000000).toFixed(1)) + ' G' : Math.sign(num)*Math.abs(num)
    }else return numEntry;
}

anychart.onDocumentReady(function () {
	// set chart theme
// anychart.theme('darkBlue');
anychart.theme('darkBlue');

    // The data used in this sample can be obtained from the CDN
    // https://cdn.anychart.com/samples/maps-general-features/world-choropleth-map/data.json
    anychart.data.loadJsonFile('https://cdn.anychart.com/samples/maps-general-features/world-choropleth-map/data.json', function (data) {

        var map = anychart.map();
        
        //handle zoom
        var zoom = anychart.ui.zoom();
        zoom.target(map);

        //Addint id in covidStats
        var covidDetail, countriesDetails;
        //(i = 0; i < cars.length; i++)
        for (i = 0; i < covidStats.length; i++){
            //remove comma from numbers
            covidStats[i].cases = covidStats[i].cases.replace(',','');
            covidStats[i].deaths = covidStats[i].deaths.replace(',','');
            covidStats[i].total_recovered = covidStats[i].total_recovered.replace(',','');
            covidStats[i].new_deaths = covidStats[i].new_deaths.replace(',','');
            covidStats[i].new_cases = covidStats[i].new_cases.replace(',','');
            covidStats[i].serious_critical = covidStats[i].serious_critical.replace(',','');
            covidStats[i].active_cases = covidStats[i].active_cases.replace(',','');

            for(j = 0; j < data.length; j++){
                if (covidStats[i].country_name == data[j].name){
                    covidStats[i]["id"] = data[j].id;
                    covidStats[i]["population"] = data[j].population;
                }
            }
        }

        //set id for USA. Need to add population for USA and others
        for (i = 0; i < covidStats.length; i++){
           if(covidStats[i].country_name == "USA") {
            covidStats[i]["id"] = "US"
           }
           if(covidStats[i].country_name == "UK") {
            covidStats[i]["id"] = "GB"
           }
           if(covidStats[i].country_name == "Congo") {
            covidStats[i]["id"] = "CD"
           }
           if(covidStats[i].country_name == "CAR") {
            covidStats[i]["id"] = "CF"
           }
           if(covidStats[i].country_name == "S. Korea") {
            covidStats[i]["id"] = "KR"
           }
        } 
        // set Population
        for (i = 0; i < covidStats.length; i++){
            for(j = 0; j < data.length; j++){
                if (covidStats[i].id == data[j].id){
                    covidStats[i]["population"] = data[j].population;
                }
            }
        }
        //init data
        //data = jsonData.countries_stat
        map.credits()
                .enabled(true)
                .url('https://en.wikipedia.org/wiki/List_of_sovereign_states_and_dependent_territories_by_population_density')
                .logoSrc('https://en.wikipedia.org/static/favicon/wikipedia.ico')
                .text('Data source: https://en.wikipedia.org/wiki/List_of_sovereign_states_and_dependent_territories_by_population_density');

        map.title()
                .enabled(true)
                .fontSize(24)
                .useHtml(true)
                .padding([10, 0, 10, 0])
                .text('<span style="text-decoration: underline; color:#f0f8ff; font-weight:bold">COVID-19 : Informations en temps réel</span><br/>' +
                    '<span  style="color:#c6e2ff; font-size: 18px;">'+dateTime+'</span><br/>'+
                    'Sélectionnez un pays pour avoir les informations<br/>' +
                        '<span  style="color:#929292; font-size: 14px;">(Sources: Wikipedia & astsiatsko)</span>');

        map.geoData('anychart.maps.world');
        map.interactivity().selectionMode('single-select');
        map.padding(0);

        // set zoom
        var clicked = true;
        map.listen("click", function(evt) {
            if (clicked) {                 
                map.zoomTo(3, evt.clientX, evt.clientY);
            }
            // else {
            //     map.zoomTo(0, evt.clientX, evt.clientY);
            // }
        clicked = !clicked;
        });
       

        var dataSet = anychart.data.set(covidStats);
        var density_data = dataSet.mapAs({'value': 'cases'});
        var series = map.choropleth(density_data);
        series.tooltip().title().fontSize(60);
        series.labels(false);

        series.hovered()
                .fill('#ff6960')
                .stroke(anychart.color.darken('#ff6960'));

        series.selected()
                .fill('#F21C23')
                .stroke(anychart.color.darken('#F21C23'));

        // var stage = acgraph.create("container2");
        // var layer = stage.layer();

        // var textObject = layer.text(10, 10, "Click on this text");
        // textObject.style({fontSize: "18px"});


        // map.listen("click", function(){
        //     textObject.text("You clicked. Congrats !!"+this.value);

        //     var seriesData = series.data();

        //     var filterData = seriesData.filter("value", function (value) {
        //         console.log(value);
        //         return value;
        //     });

        //     series.tooltip()
        //         .enabled(false)
        //         // .fontSize(30)
        //         .allowLeaveScreen(true)
        //         .separator(false)
        //         // .useHtml(true)
        //         .fontSize(30)
        //         .format(function () {
        //             textObject.text("You clicked. Congrats !!"+this.value);
        //             return '<span  style="color: #d9d9d9;font-size:80%""><b>' +
        //                     parseFloat(this.value).toLocaleString() + '</b> cas.</span><br/>' +
        //                     '<span style="color: #d9d9d9;font-size:80%"><b>' +
        //                     parseInt(this.getData('deaths')).toLocaleString() + '</b> morts.</span><br/>' +
        //                     '<span style="color: #d9d9d9;font-size:80%"><b>' +
        //                     parseInt(this.getData('total_recovered')).toLocaleString() + '</b> guéris.</span><br/>'
        //                     +'<span style="color: #d9d9d9;font-size:50%"><b>' +
        //                     parseInt(this.getData('population')).toLocaleString() + '</b> habs</span><br/>';
        //         });
        // });
        
        series.tooltip()
                // .fontSize(30)
                .allowLeaveScreen(false)
                .separator(true)
                .useHtml(true)
                .fontSize(30)
                .format(function () {
                    return '<span  style="color: #ff6960;font-size:160%;font-family:Times New Roman"><b>' +
                            kFormatter(parseFloat(this.value).toLocaleString()) + '</b> cas.</span><br/>' +
                            '<span style="color: #ff6960;font-size:160%;font-family:Times New Roman"><b>' +
                            kFormatter(parseInt(this.getData('deaths')).toLocaleString()) + '</b> morts.</span><br/>' +
                            '<span style="color: #51FF0D;font-size:160%;font-family:Times New Roman"><b>' +
                            kFormatter(parseInt(this.getData('total_recovered')).toLocaleString()) + '</b> guéris.</span><br/>'
                            +'<span style="color: #d9d9d9;font-size:160%;font-family:Times New Roman"><b>' +
                            kFormatter(parseInt(this.getData('population')).toLocaleString()) + '</b> habs</span><br/>';
                });


        var scale = anychart.scales.ordinalColor([
            {less: 300},
            {from: 300, to: 600},
            {from: 600, to: 1000},
            {from: 1000, to: 3000},
            {from: 3000, to: 6000},
            {from: 6000, to: 10000},
            {from: 10000, to: 20000},
            {from: 20000, to: 50000},
            {from: 50000, to: 80000},
            {greater: 80000}
        ]);
        scale.colors(['#B3E0F6','#81d4fa', '#4fc3f7', '#29b6f6', '#039be5', '#0288d1', '#0277bd', '#01579b', '#014377', '#08088A']);

        var colorRange = map.colorRange();
        colorRange.enabled(true)
                .padding([0, 0, 20, 0]);
        colorRange.ticks()
                .enabled(true)
                .stroke('3 #ffffff')
                .position('center')
                .length(7);
        colorRange.colorLineSize(5);
        colorRange.marker().size(7);
        colorRange.labels()
                .fontSize(11)
                .padding(3, 0, 0, 0)
                .format(function () {
                    var range = this.colorRange;
                    var name;
                    if (isFinite(range.start + range.end)) {
                        name = range.start + ' - ' + range.end;
                    } else if (isFinite(range.start)) {
                        name = 'Moins de ' + range.start;
                    } else {
                        name = 'Plus de ' + range.end;
                    }
                    return name
                });

        series.colorScale(scale);
        series.tooltip().fontColor("green");

        // create zoom controls
        // var zoomController = anychart.ui.zoom();
        // zoomController.render(map);

        // set container id for the chart
        map.container('container');

        // map.tooltip().positionMode("chart");
        // map.tooltip().anchor("topLeft");
        // initiate chart drawing
        map.interactivity().zoomOnMouseWheel(true);
        map.draw();

        //handle zoom
        var controllerContainer = document.createElement('div');
        controllerContainer.style.cssText = 'background-color: #FFECB3; padding: 5px;';
        controllerContainer.setAttribute('id', 'controller_container');

        document.body.appendChild(controllerContainer);

        //Renders the zoom controller into container.
        zoom.decorate(controllerContainer);
    });
});
</script>
</body>
</html>
                